version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7

# Default container configuration
container_config: &container_config #working_directory: ./circleci
  docker:
    - image: cimg/node:16.10

attach_workspace: &attach_workspace
  attach_workspace:
    at: .

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  prepare:
    <<: *container_config
    steps:
      - checkout
      # Download and cache dependencies
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  build:
    <<: *container_config
    steps:
      - checkout
      - *attach_workspace
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .next
  test:
    <<: *container_config
    steps:
      - checkout
      - *attach_workspace
      - run: npm run test
  deploy-prod:
    <<: *container_config
    steps:
      - checkout
      - *attach_workspace
      - deploy:
          name: Deploy to Netlify
          command: npm run netlify:deploy
workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build_deploy:
    jobs:
      - prepare
      - build:
          requires:
            - prepare
      - test:
          requires:
            - build
      - deploy-prod:
          requires:
            - test
